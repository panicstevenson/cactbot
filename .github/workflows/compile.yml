name: Compile CactbotOverlay Against Pull Request

on:
  pull_request:
    paths:
    - 'CactbotOverlay/*'
    - 'Cactbot.csproj'
    - 'Cactbot.sln'

jobs:
  compile:
    name: Compile CactbotOverlay Against Pull Request Merge Commit
    runs-on: ubuntu-18.04

    container:
      # Ubuntu 18.04 LTS image is the latest Minimal Ubuntu 18.04 image
      image: ubuntu:18.04
      env:
        ACT_DOWNLOAD_URL: https://advancedcombattracker.com/includes/page-download.php?id=57
        FFXIV_ACT_PLUGIN_REPOSITORY: ravahn/FFXIV_ACT_Plugin
        OVERLAY_PLUGIN_REPOSITORY: hibiyasleep/OverlayPlugin
        ACT_THIRD_PARTY_PATH: ./CactbotOverlay/ThirdParty/ACT/
        OVERLAY_PLUGIN_THIRD_PARTY_PATH: ./CactbotOverlay/ThirdParty/OverlayPlugin/
        RELEASE: ${{ null }}

    steps:
      - name: Checkout Pull Request Merge Commit
        uses: actions/checkout@master
      - name: Install APT Packages
        run: |
          apt-get update && apt-get install --assume-yes --no-install-recommends \
            busybox \
            ca-certificates \
            jq \
            wget \
            zip
      - name: Download Advanced Combat Tracker Executable
        run: |
          wget -qO- $ACT_DOWNLOAD_URL | busybox unzip -d $ACT_THIRD_PARTY_PATH -
      - name: Download FFXIV ACT Plugin Library File
        run: |
          export FFXIV_ACT_PLUGIN_URL=$(wget -qO- "https://api.github.com/repos/${FFXIV_ACT_PLUGIN_REPOSITORY}/releases/latest" | jq --raw-output '.assets[0].browser_download_url')
          wget -qO- $FFXIV_ACT_PLUGIN_URL | busybox unzip -d $ACT_THIRD_PARTY_PATH -
      - name: Download OverlayPlugin Library Files
        run: |
          export OVERLAY_PLUGIN_URL=$(wget -qO- "https://api.github.com/repos/${OVERLAY_PLUGIN_REPOSITORY}/releases/latest" | jq --raw-output '.assets[0].browser_download_url')
          wget -qO- $OVERLAY_PLUGIN_URL | busybox unzip -d $OVERLAY_PLUGIN_THIRD_PARTY_PATH -
      - name: Build Cactbot Overlay Release
        uses: docker://mono:6.0
        with:
          entrypoint: msbuild
          args: Cactbot.sln /p:Configuration=Release /p:Platform=x64
      - name: Create Release Artifact
        if: startsWith(github.event.pull_request.title, 'release:') && github.event.pull_request.author_association == 'OWNER'
        run: |
          export RELEASE=$(grep -oP 'AssemblyFileVersion\("\K\d+\.\d+\.\d' ./CactbotOverlay/Properties/AssemblyInfo.cs)
          mkdir -p release/OverlayPlugin/addons release/OverlayPlugin/cactbot
          cp AdvancedCactbot.md README.md release/
          cp bin/x64/Release/CactbotOverlay.dll release/OverlayPlugin/addons/
          cp -r resources/ ui/ user/ release/OverlayPlugin/cactbot/
          mv release/ cacbot-$RELEASE/
          zip -r release cactbot-$RELEASE
          mkdir -p staging
          mv release.zip staging/
      - uses: actions/upload-artifact@master
        if: startsWith(github.event.pull_request.title, 'release:') && github.event.pull_request.author_association == 'OWNER'
        with:
          name: '*'
          path: staging/
